image: golang:1.12-alpine

stages:
    - build
    - test
    - release
    - deploy

variables:
    WORKDIR: /go/src/gitlab.com/hokiegeek.net/teadb

cache:
  paths:
    - teadbd/teadbd

.prep-go-build: &prep-go-build
  before_script:
    - mkdir -p /go/src/gitlab.com/hokiegeek.net/teadb
    - cp -r . /go/src/gitlab.com/hokiegeek.net/teadb
    - apk add --update git build-base
      # - go get -d -v ./...

build:
  <<: *prep-go-build
  stage: build
  script:
    - cd teadbd && go build -v ./...

unit-test:
  <<: *prep-go-build
  stage: test
  script:
    - go test -v -cover ./...

## Create container
.build-docker-image: &build-docker-image
  stage: release
  image: docker:git
  services:
    - docker:dind
  script:
    - ls -l teadbd
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  retry: 1

create-container-dev:
  <<: *build-docker-image
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:SNAPSHOT
  except:
    - tags
    - master

create-container:
  <<: *build-docker-image
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    IMAGE_LATEST_TAG: $CI_REGISTRY_IMAGE:latest
  after_script:
    - docker tag $IMAGE_TAG $IMAGE_LATEST_TAG
    - docker push $IMAGE_LATEST_TAG
  only:
    - tags
  except:
    - branches

deploy-and-restart:
  stage: deploy
  image: alpine:edge
  variables:
    IMAGE_LATEST_TAG: $CI_REGISTRY_IMAGE:latest
  before_script:
    - apk update && apk upgrade
    - apk add --no-cache ansible
    - echo $HOST_SSH_KEY | base64 -d > /tmp/sshkey
    - chmod 0600 /tmp/sshkey
    - echo "${DEPLOY_HOST} ansible_ssh_private_key_file=/tmp/sshkey" > /tmp/host
  script:
    - chmod 755 prod
    - cd ./prod
    - ansible-playbook -i /tmp/host -u ${ADMIN_USER} -e image=${IMAGE_LATEST_TAG} ./ansible.yml
